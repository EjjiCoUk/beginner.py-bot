{
    "callfunc": "python",
    "responses": [
        {
            "alias": "self",
            "title": "self",
            "type": "variable",
            "text": "The instance that the method is currently bound to.\n\nAll instance methods of a class must declare a first attribute that is `self`.",
            "link": "https://docs.python.org/3/tutorial/classes.html#class-objects",
            "code": [
              "This will create two `Person` objects with the names Bob and John, it will then print those names using the `print_name` method of the `Person` object.\n```py\nclass Person:\n    def __init__(self, name):\n        self.name = name\n        self.print_name()\n\n    def print_name(self):\n        print(\"My name is\", self.name)\n\n\nbob = Person(\"Bob\")\njohn = Person(\"John\")```"
            ]
        },
        {
            "alias": "abs()",
            "title": "abs()",
            "type": "function",
            "text": "Returns the absolute value of a number.",
            "link": "https://docs.python.org/3/library/functions.html#abs",
            "code": ["`abs(1)` is `1` and `abs(-1)` is also `1`\n```py\nabs(1) == abs(-1)```"]
        },
        {
            "alias": "all()",
            "title": "all()",
            "type": "function",
            "text": "Returns `True` if all items in an iterable object are true",
            "link": "https://docs.python.org/3/library/functions.html#all",
            "code": [
              "```py\nif all([False, True, True]):\n    print(\"This will not print\")```",
              "```py\nif all([True, True, True]):\n    print(\"This will print\")```"
            ]
        },
        {
            "alias": "any()",
            "title": "any()",
            "type": "function",
            "text": "Returns True if any item in an iterable object is true",
            "link": "https://docs.python.org/3/library/functions.html#any",
            "code": []
        },
        {
            "alias": "ascii()",
            "title": "ascii()",
            "type": "function",
            "text": "Returns a readable version of an object. Replaces none-ascii characters with escape character",
            "link": "https://docs.python.org/3/library/functions.html#ascii",
            "code": []
        },
        {
            "alias": "bin()",
            "title": "bin()",
            "type": "function",
            "text": "Returns the binary version of a number",
            "link": "https://docs.python.org/3/library/functions.html#bin",
            "code": []
        },
        {
            "alias": "bool()",
            "title": "bool()",
            "type": "function",
            "text": "Returns the boolean value of the specified object",
            "link": "https://docs.python.org/3/library/functions.html#bool",
            "code": []
        },
        {
            "alias": "bytearray()",
            "title": "bytearray()",
            "type": "function",
            "text": "Returns an array of bytes",
            "link": "https://docs.python.org/3/library/functions.html#bytearray",
            "code": []
        },
        {
            "alias": "bytes()",
            "title": "bytes()",
            "type": "function",
            "text": "Returns a bytes object",
            "link": "https://docs.python.org/3/library/functions.html#bytes",
            "code": []
        },
        {
            "alias": "callable()",
            "title": "callable()",
            "type": "function",
            "text": "Returns True if the specified object is callable, otherwise False",
            "link": "https://docs.python.org/3/library/functions.html#callable",
            "code": []
        },
        {
            "alias": "chr()",
            "title": "chr()",
            "type": "function",
            "text": "Returns a character from the specified Unicode code.",
            "link": "https://docs.python.org/3/library/functions.html#chr",
            "code": []
        },
        {
            "alias": "classmethod()",
            "title": "classmethod()",
            "type": "function",
            "text": "Converts a method into a class method",
            "link": "https://docs.python.org/3/library/functions.html#classmethod",
            "code": []
        },
        {
            "alias": "compile()",
            "title": "compile()",
            "type": "function",
            "text": "Returns the specified source as an object, ready to be executed",
            "link": "https://docs.python.org/3/library/functions.html#compile",
            "code": []
        },
        {
            "alias": "complex()",
            "title": "complex()",
            "type": "function",
            "text": "Returns a complex number",
            "link": "https://docs.python.org/3/library/functions.html#complex",
            "code": []
        },
        {
            "alias": "delattr()",
            "title": "delattr()",
            "type": "function",
            "text": "Deletes the specified attribute (property or method) from the specified object",
            "link": "https://docs.python.org/3/library/functions.html#delattr",
            "code": []
        },
        {
            "alias": "dict()",
            "title": "dict()",
            "type": "function",
            "text": "Returns a dictionary (Array)",
            "link": "https://docs.python.org/3/library/functions.html#dict",
            "code": []
        },
        {
            "alias": "dir()",
            "title": "dir()",
            "type": "function",
            "text": "Returns a list of the specified object's properties and methods",
            "link": "https://docs.python.org/3/library/functions.html#dir",
            "code": []
        },
        {
            "alias": "divmod()",
            "title": "divmod()",
            "type": "function",
            "text": "Returns the quotient and the remainder when argument1 is divided by argument2",
            "link": "https://docs.python.org/3/library/functions.html#divmod",
            "code": []
        },
        {
            "alias": "enumerate()",
            "title": "enumerate()",
            "type": "function",
            "text": "Takes a collection (e.g. a tuple) and returns it as an enumerate object",
            "link": "https://docs.python.org/3/library/functions.html#enumerate",
            "code": []
        },
        {
            "alias": "eval()",
            "title": "eval()",
            "type": "function",
            "text": "Evaluates and executes an expression",
            "link": "https://docs.python.org/3/library/functions.html#eval",
            "code": []
        },
        {
            "alias": "exec()",
            "title": "exec()",
            "type": "function",
            "text": "Executes the specified code (or object)",
            "link": "https://docs.python.org/3/library/functions.html#exec",
            "code": []
        },
        {
            "alias": "filter()",
            "title": "filter()",
            "type": "function",
            "text": "Use a filter function to exclude items in an iterable object",
            "link": "https://docs.python.org/3/library/functions.html#filter",
            "code": []
        },
        {
            "alias": "float()",
            "title": "float()",
            "type": "function",
            "text": "Returns a floating point number",
            "link": "https://docs.python.org/3/library/functions.html#float",
            "code": []
        },
        {
            "alias": "format()",
            "title": "format()",
            "type": "function",
            "text": "Formats a specified value",
            "link": "https://docs.python.org/3/library/functions.html#format",
            "code": []
        },
        {
            "alias": "frozenset()",
            "title": "frozenset()",
            "type": "function",
            "text": "Returns a frozenset object",
            "link": "https://docs.python.org/3/library/functions.html#frozenset",
            "code": []
        },
        {
            "alias": "getattr()",
            "title": "getattr()",
            "type": "function",
            "text": "Returns the value of the specified attribute (property or method)",
            "link": "https://docs.python.org/3/library/functions.html#getattr",
            "code": []
        },
        {
            "alias": "globals()",
            "title": "globals()",
            "type": "function",
            "text": "Returns the current global symbol table as a dictionary",
            "link": "https://docs.python.org/3/library/functions.html#globals",
            "code": []
        },
        {
            "alias": "hasattr()",
            "title": "hasattr()",
            "type": "function",
            "text": "Returns True if the specified object has the specified attribute (property/method)",
            "link": "https://docs.python.org/3/library/functions.html#hasattr",
            "code": []
        },
        {
            "alias": "hash()",
            "title": "hash()",
            "type": "function",
            "text": "Returns the hash value of a specified object",
            "link": "https://docs.python.org/3/library/functions.html#hash",
            "code": []
        },
        {
            "alias": "help()",
            "title": "help()",
            "type": "function",
            "text": "Executes the built-in help system",
            "link": "https://docs.python.org/3/library/functions.html#help",
            "code": []
        },
        {
            "alias": "hex()",
            "title": "hex()",
            "type": "function",
            "text": "Converts a number into a hexadecimal value",
            "link": "https://docs.python.org/3/library/functions.html#hex",
            "code": []
        },
        {
            "alias": "id()",
            "title": "id()",
            "type": "function",
            "text": "Returns the id of an object",
            "link": "https://docs.python.org/3/library/functions.html#id",
            "code": []
        },
        {
            "alias": "input()",
            "title": "input()",
            "type": "function",
            "text": "Allowing user input",
            "link": "https://docs.python.org/3/library/functions.html#input",
            "code": []
        },
        {
            "alias": "int()",
            "title": "int()",
            "type": "function",
            "text": "Returns an integer number",
            "link": "https://docs.python.org/3/library/functions.html#int",
            "code": []
        },
        {
            "alias": "isinstance()",
            "title": "isinstance()",
            "type": "function",
            "text": "Returns True if a specified object is an instance of a specified object",
            "link": "https://docs.python.org/3/library/functions.html#isinstance",
            "code": []
        },
        {
            "alias": "issubclass()",
            "title": "issubclass()",
            "type": "function",
            "text": "Returns True if a specified class is a subclass of a specified object",
            "link": "https://docs.python.org/3/library/functions.html#issubclass",
            "code": []
        },
        {
            "alias": "iter()",
            "title": "iter()",
            "type": "function",
            "text": "Returns an iterator object",
            "link": "https://docs.python.org/3/library/functions.html#iter",
            "code": []
        },
        {
            "alias": "len()",
            "title": "len()",
            "type": "function",
            "text": "The *len(<value>)* function returns the length of the iterable passed between the parentheses. It returns a *TypeError* if <value> is not iterable and therefore has no length.",
            "link": "https://docs.python.org/3/library/functions.html#len",
            "code": [
                "```py\nmyString = 'This is a string.'\nlength = len(myString)\nprint(length)\n>>> 17\n```",
                "```py\nmyList = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nlength = len(myList)\nprint(length)\n>>> 10\n```"
            ]
        },
        {
            "alias": "list()",
            "title": "list()",
            "type": "function",
            "text": "Returns a list",
            "link": "https://docs.python.org/3/library/functions.html#list",
            "code": []
        },
        {
            "alias": "locals()",
            "title": "locals()",
            "type": "function",
            "text": "Returns an updated dictionary of the current local symbol table",
            "link": "https://docs.python.org/3/library/functions.html#locals",
            "code": []
        },
        {
            "alias": "map()",
            "title": "map()",
            "type": "function",
            "text": "Returns the specified iterator with the specified function applied to each item",
            "link": "https://docs.python.org/3/library/functions.html#map",
            "code": []
        },
        {
            "alias": "max()",
            "title": "max()",
            "type": "function",
            "text": "Returns the largest item in an iterable",
            "link": "https://docs.python.org/3/library/functions.html#max",
            "code": []
        },
        {
            "alias": "memoryview()",
            "title": "memoryview()",
            "type": "function",
            "text": "Return a \u201cmemory view\u201d object created from the given argument.",
            "link": "https://docs.python.org/3/library/functions.html#memoryview",
            "code": []
        },
        {
            "alias": "min()",
            "title": "min()",
            "type": "function",
            "text": "Returns the smallest item in an iterable",
            "link": "https://docs.python.org/3/library/functions.html#min",
            "code": []
        },
        {
            "alias": "next()",
            "title": "next()",
            "type": "function",
            "text": "Returns the next item in an iterable",
            "link": "https://docs.python.org/3/library/functions.html#next",
            "code": []
        },
        {
            "alias": "object()",
            "title": "object()",
            "type": "function",
            "text": "Returns a new object",
            "link": "https://docs.python.org/3/library/functions.html#object",
            "code": []
        },
        {
            "alias": "oct()",
            "title": "oct()",
            "type": "function",
            "text": "Converts a number into an octal",
            "link": "https://docs.python.org/3/library/functions.html#oct",
            "code": []
        },
        {
            "alias": "open()",
            "title": "open()",
            "type": "function",
            "text": "Opens a file and returns a file object",
            "link": "https://docs.python.org/3/library/functions.html#open",
            "code": []
        },
        {
            "alias": "ord()",
            "title": "ord()",
            "type": "function",
            "text": "Convert an integer representing the Unicode of the specified character",
            "link": "https://docs.python.org/3/library/functions.html#ord",
            "code": []
        },
        {
            "alias": "pow()",
            "title": "pow()",
            "type": "function",
            "text": "Returns the value of x to the power of y",
            "link": "https://docs.python.org/3/library/functions.html#pow",
            "code": []
        },
        {
            "alias": "print()",
            "title": "print()",
            "type": "function",
            "text": "Prints to the standard output device",
            "link": "https://docs.python.org/3/library/functions.html#print",
            "code": [
                "```py\nprint(\"Who's the good bot? I'm the good bot.\")\n>>> \"Who's the good bot? I'm the good bot.\"\n```"
            ]
        },
        {
            "alias": "property()",
            "title": "property()",
            "type": "function",
            "text": "Gets, sets, deletes a property",
            "link": "https://docs.python.org/3/library/functions.html#property",
            "code": []
        },
        {
            "alias": "range()",
            "title": "range()",
            "type": "function",
            "text": "Returns a sequence of numbers, starting from 0 and increments by 1 (by default)",
            "link": "https://docs.python.org/3/library/functions.html#range",
            "code": []
        },
        {
            "alias": "repr()",
            "title": "repr()",
            "type": "function",
            "text": "Returns a readable version of an object",
            "link": "https://docs.python.org/3/library/functions.html#repr",
            "code": []
        },
        {
            "alias": "reversed()",
            "title": "reversed()",
            "type": "function",
            "text": "Returns a reversed iterator",
            "link": "https://docs.python.org/3/library/functions.html#reversed",
            "code": []
        },
        {
            "alias": "round()",
            "title": "round()",
            "type": "function",
            "text": "Rounds a numbers",
            "link": "https://docs.python.org/3/library/functions.html#round",
            "code": []
        },
        {
            "alias": "set()",
            "title": "set()",
            "type": "function",
            "text": "Returns a new set object",
            "link": "https://docs.python.org/3/library/functions.html#set",
            "code": []
        },
        {
            "alias": "setattr()",
            "title": "setattr()",
            "type": "function",
            "text": "Sets an attribute (property/method) of an object",
            "link": "https://docs.python.org/3/library/functions.html#setattr",
            "code": []
        },
        {
            "alias": "slice()",
            "title": "slice()",
            "type": "function",
            "text": "Returns a slice object",
            "link": "https://docs.python.org/3/library/functions.html#slice",
            "code": []
        },
        {
            "alias": "sorted()",
            "title": "sorted()",
            "type": "function",
            "text": "Returns a sorted list",
            "link": "https://docs.python.org/3/library/functions.html#sorted",
            "code": []
        },
        {
            "alias": "staticmethod()",
            "title": "@staticmethod()",
            "type": "function",
            "text": "Converts a method into a static method",
            "link": "https://docs.python.org/3/library/functions.html#staticmethod",
            "code": []
        },
        {
            "alias": "str()",
            "title": "str()",
            "type": "function",
            "text": "Returns a string object",
            "link": "https://docs.python.org/3/library/functions.html#str",
            "code": []
        },
        {
            "alias": "sum()",
            "title": "sum()",
            "type": "function",
            "text": "Sums the items of an iterator",
            "link": "https://docs.python.org/3/library/functions.html#sum",
            "code": []
        },
        {
            "alias": "super()",
            "title": "super()",
            "type": "function",
            "text": "Returns an object that represents the parent class",
            "link": "https://docs.python.org/3/library/functions.html#super",
            "code": []
        },
        {
            "alias": "tuple()",
            "title": "tuple()",
            "type": "function",
            "text": "Returns a tuple",
            "link": "https://docs.python.org/3/library/functions.html#tuple",
            "code": []
        },
        {
            "alias": "type()",
            "title": "type()",
            "type": "function",
            "text": "Returns the type of an object",
            "link": "https://docs.python.org/3/library/functions.html#type",
            "code": []
        },
        {
            "alias": "vars()",
            "title": "vars()",
            "type": "function",
            "text": "Returns the __dict__ property of an object",
            "link": "https://docs.python.org/3/library/functions.html#vars",
            "code": []
        },
        {
            "alias": "zip()",
            "title": "zip()",
            "type": "function",
            "text": "Returns an iterator, from two or more iterators",
            "link": "https://docs.python.org/3/library/functions.html#zip",
            "code": []
        },
        {
            "alias": "capitalize()",
            "title": "capitalize()",
            "type": "function",
            "text": "Converts the first character to upper case",
            "link": "https://docs.python.org/3/library/functions.html#capitalize",
            "code": []
        },
        {
            "alias": "casefold()",
            "title": "casefold()",
            "type": "function",
            "text": "Converts string into lower case",
            "link": "https://docs.python.org/3/library/functions.html#casefold",
            "code": []
        },
        {
            "alias": "center()",
            "title": "center()",
            "type": "function",
            "text": "Returns a centered string",
            "link": "https://docs.python.org/3/library/functions.html#center",
            "code": []
        },
        {
            "alias": "count()",
            "title": "count()",
            "type": "function",
            "text": "Returns the number of times a specified value occurs in a string",
            "link": "https://docs.python.org/3/library/functions.html#count",
            "code": []
        },
        {
            "alias": "encode()",
            "title": "encode()",
            "type": "function",
            "text": "Returns an encoded version of the string",
            "link": "https://docs.python.org/3/library/functions.html#encode",
            "code": []
        },
        {
            "alias": "endswith()",
            "title": "endswith()",
            "type": "function",
            "text": "Returns true if the string ends with the specified value",
            "link": "https://docs.python.org/3/library/functions.html#endswith",
            "code": []
        },
        {
            "alias": "expandtabs()",
            "title": "expandtabs()",
            "type": "function",
            "text": "Sets the tab size of the string",
            "link": "https://docs.python.org/3/library/functions.html#expandtabs",
            "code": []
        },
        {
            "alias": "find()",
            "title": "find()",
            "type": "function",
            "text": "Searches the string for a specified value and returns the position of where it was found",
            "link": "https://docs.python.org/3/library/functions.html#find",
            "code": []
        },
        {
            "alias": "format()",
            "title": "format()",
            "type": "function",
            "text": "Formats specified values in a string",
            "link": "https://docs.python.org/3/library/functions.html#format",
            "code": []
        },
        {
            "alias": "format_map()",
            "title": "format_map()",
            "type": "function",
            "text": "Formats specified values in a string",
            "link": "https://docs.python.org/3/library/functions.html#format_map",
            "code": []
        },
        {
            "alias": "index()",
            "title": "index()",
            "type": "function",
            "text": "Searches the string for a specified value and returns the position of where it was found",
            "link": "https://docs.python.org/3/library/functions.html#index",
            "code": []
        },
        {
            "alias": "isalnum()",
            "title": "isalnum()",
            "type": "function",
            "text": "Returns True if all characters in the string are alphanumeric",
            "link": "https://docs.python.org/3/library/functions.html#isalnum",
            "code": []
        },
        {
            "alias": "isalpha()",
            "title": "isalpha()",
            "type": "function",
            "text": "Returns True if all characters in the string are in the alphabet",
            "link": "https://docs.python.org/3/library/functions.html#isalpha",
            "code": []
        },
        {
            "alias": "isdecimal()",
            "title": "isdecimal()",
            "type": "function",
            "text": "Returns True if all characters in the string are decimals",
            "link": "https://docs.python.org/3/library/functions.html#isdecimal",
            "code": []
        },
        {
            "alias": "isdigit()",
            "title": "isdigit()",
            "type": "function",
            "text": "Returns True if all characters in the string are digits",
            "link": "https://docs.python.org/3/library/functions.html#isdigit",
            "code": []
        },
        {
            "alias": "isidentifier()",
            "title": "isidentifier()",
            "type": "function",
            "text": "Returns True if the string is an identifier",
            "link": "https://docs.python.org/3/library/functions.html#isidentifier",
            "code": []
        },
        {
            "alias": "islower()",
            "title": "islower()",
            "type": "function",
            "text": "Returns True if all characters in the string are lower case",
            "link": "https://docs.python.org/3/library/functions.html#islower",
            "code": []
        },
        {
            "alias": "isnumeric()",
            "title": "isnumeric()",
            "type": "function",
            "text": "Returns True if all characters in the string are numeric",
            "link": "https://docs.python.org/3/library/functions.html#isnumeric",
            "code": []
        },
        {
            "alias": "isprintable()",
            "title": "isprintable()",
            "type": "function",
            "text": "Returns True if all characters in the string are printable",
            "link": "https://docs.python.org/3/library/functions.html#isprintable",
            "code": []
        },
        {
            "alias": "isspace()",
            "title": "isspace()",
            "type": "function",
            "text": "Returns True if all characters in the string are whitespaces",
            "link": "https://docs.python.org/3/library/functions.html#isspace",
            "code": []
        },
        {
            "alias": "istitle()",
            "title": "istitle()",
            "type": "function",
            "text": "Returns True if the string follows the rules of a title",
            "link": "https://docs.python.org/3/library/functions.html#istitle",
            "code": []
        },
        {
            "alias": "isupper()",
            "title": "isupper()",
            "type": "function",
            "text": "Returns True if all characters in the string are upper case",
            "link": "https://docs.python.org/3/library/functions.html#isupper",
            "code": []
        },
        {
            "alias": "join()",
            "title": "join()",
            "type": "function",
            "text": "Joins the elements of an iterable to the end of the string",
            "link": "https://docs.python.org/3/library/functions.html#join",
            "code": []
        },
        {
            "alias": "ljust()",
            "title": "ljust()",
            "type": "function",
            "text": "Returns a left justified version of the string",
            "link": "https://docs.python.org/3/library/functions.html#ljust",
            "code": []
        },
        {
            "alias": "lower()",
            "title": "lower()",
            "type": "function",
            "text": "Converts a string into lower case",
            "link": "https://docs.python.org/3/library/functions.html#lower",
            "code": []
        },
        {
            "alias": "lstrip()",
            "title": "lstrip()",
            "type": "function",
            "text": "Returns a left trim version of the string",
            "link": "https://docs.python.org/3/library/functions.html#lstrip",
            "code": []
        },
        {
            "alias": "maketrans()",
            "title": "maketrans()",
            "type": "function",
            "text": "Returns a translation table to be used in translations",
            "link": "https://docs.python.org/3/library/functions.html#maketrans",
            "code": []
        },
        {
            "alias": "partition()",
            "title": "partition()",
            "type": "function",
            "text": "Returns a tuple where the string is parted into three parts",
            "link": "https://docs.python.org/3/library/functions.html#partition",
            "code": []
        },
        {
            "alias": "replace()",
            "title": "replace()",
            "type": "function",
            "text": "Returns a string where a specified value is replaced with a specified value",
            "link": "https://docs.python.org/3/library/functions.html#replace",
            "code": []
        },
        {
            "alias": "rfind()",
            "title": "rfind()",
            "type": "function",
            "text": "Searches the string for a specified value and returns the last position of where it was found",
            "link": "https://docs.python.org/3/library/functions.html#rfind",
            "code": []
        },
        {
            "alias": "rindex()",
            "title": "rindex()",
            "type": "function",
            "text": "Searches the string for a specified value and returns the last position of where it was found",
            "link": "https://docs.python.org/3/library/functions.html#rindex",
            "code": []
        },
        {
            "alias": "rjust()",
            "title": "rjust()",
            "type": "function",
            "text": "Returns a right justified version of the string",
            "link": "https://docs.python.org/3/library/functions.html#rjust",
            "code": []
        },
        {
            "alias": "rpartition()",
            "title": "rpartition()",
            "type": "function",
            "text": "Returns a tuple where the string is parted into three parts",
            "link": "https://docs.python.org/3/library/functions.html#rpartition",
            "code": []
        },
        {
            "alias": "rsplit()",
            "title": "rsplit()",
            "type": "function",
            "text": "Splits the string at the specified separator, and returns a list",
            "link": "https://docs.python.org/3/library/functions.html#rsplit",
            "code": []
        },
        {
            "alias": "rstrip()",
            "title": "rstrip()",
            "type": "function",
            "text": "Returns a right trim version of the string",
            "link": "https://docs.python.org/3/library/functions.html#rstrip",
            "code": []
        },
        {
            "alias": "split()",
            "title": "split()",
            "type": "function",
            "text": "Splits the string at the specified separator, and returns a list",
            "link": "https://docs.python.org/3/library/functions.html#split",
            "code": [
                "```py\nstring = \"this is an example text\"\nlist_from_string = string.split(\" \")\nprint(list_from_string)\n>>> [\"this\", \"is\", \"an\", \"example\", \"text\"]\n```"
            ]
        },
        {
            "alias": "splitlines()",
            "title": "splitlines()",
            "type": "function",
            "text": "Splits the string at line breaks and returns a list",
            "link": "https://docs.python.org/3/library/functions.html#splitlines",
            "code": []
        },
        {
            "alias": "startswith()",
            "title": "startswith()",
            "type": "function",
            "text": "Returns true if the string starts with the specified value",
            "link": "https://docs.python.org/3/library/functions.html#startswith",
            "code": []
        },
        {
            "alias": "strip()",
            "title": "strip()",
            "type": "function",
            "text": "Returns a trimmed version of the string",
            "link": "https://docs.python.org/3/library/functions.html#strip",
            "code": []
        },
        {
            "alias": "swapcase()",
            "title": "swapcase()",
            "type": "function",
            "text": "Swaps cases, lower case becomes upper case and vice versa",
            "link": "https://docs.python.org/3/library/functions.html#swapcase",
            "code": []
        },
        {
            "alias": "title()",
            "title": "title()",
            "type": "function",
            "text": "Converts the first character of each word to upper case",
            "link": "https://docs.python.org/3/library/functions.html#title",
            "code": []
        },
        {
            "alias": "translate()",
            "title": "translate()",
            "type": "function",
            "text": "Returns a translated string",
            "link": "https://docs.python.org/3/library/functions.html#translate",
            "code": []
        },
        {
            "alias": "upper()",
            "title": "upper()",
            "type": "function",
            "text": "Converts a string into upper case",
            "link": "https://docs.python.org/3/library/functions.html#upper",
            "code": []
        },
        {
            "alias": "zfill()",
            "title": "zfill()",
            "type": "function",
            "text": "Fills the string with a specified number of 0 values at the beginning",
            "link": "https://docs.python.org/3/library/functions.html#zfill",
            "code": []
        },
        {
            "alias": "append()",
            "title": "append()",
            "type": "function",
            "text": "Adds an element at the end of the list",
            "link": "https://docs.python.org/3/library/functions.html#append",
            "code": []
        },
        {
            "alias": "clear()",
            "title": "clear()",
            "type": "function",
            "text": "Removes all the elements from the list",
            "link": "https://docs.python.org/3/library/functions.html#clear",
            "code": []
        },
        {
            "alias": "copy()",
            "title": "copy()",
            "type": "function",
            "text": "Returns a copy of the list",
            "link": "https://docs.python.org/3/library/functions.html#copy",
            "code": []
        },
        {
            "alias": "count()",
            "title": "count()",
            "type": "function",
            "text": "Returns the number of elements with the specified value",
            "link": "https://docs.python.org/3/library/functions.html#count",
            "code": []
        },
        {
            "alias": "extend()",
            "title": "extend()",
            "type": "function",
            "text": "Add the elements of a list (or any iterable), to the end of the current list",
            "link": "https://docs.python.org/3/library/functions.html#extend",
            "code": []
        },
        {
            "alias": "index()",
            "title": "index()",
            "type": "function",
            "text": "Returns the index of the first element with the specified value",
            "link": "https://docs.python.org/3/library/functions.html#index",
            "code": []
        },
        {
            "alias": "insert()",
            "title": "insert()",
            "type": "function",
            "text": "Adds an element at the specified position",
            "link": "https://docs.python.org/3/library/functions.html#insert",
            "code": []
        },
        {
            "alias": "pop()",
            "title": "pop()",
            "type": "function",
            "text": "Removes the element at the specified position",
            "link": "https://docs.python.org/3/library/functions.html#pop",
            "code": []
        },
        {
            "alias": "remove()",
            "title": "remove()",
            "type": "function",
            "text": "Removes the first item with the specified value",
            "link": "https://docs.python.org/3/library/functions.html#remove",
            "code": []
        },
        {
            "alias": "reverse()",
            "title": "reverse()",
            "type": "function",
            "text": "Reverses the order of the list",
            "link": "https://docs.python.org/3/library/functions.html#reverse",
            "code": []
        },
        {
            "alias": "sort()",
            "title": "sort()",
            "type": "function",
            "text": "Sorts the list",
            "link": "https://docs.python.org/3/library/functions.html#sort",
            "code": []
        },
        {
            "alias": "clear()",
            "title": "clear()",
            "type": "function",
            "text": "Removes all the elements from the dictionary",
            "link": "https://docs.python.org/3/library/functions.html#clear",
            "code": []
        },
        {
            "alias": "copy()",
            "title": "copy()",
            "type": "function",
            "text": "Returns a copy of the dictionary",
            "link": "https://docs.python.org/3/library/functions.html#copy",
            "code": []
        },
        {
            "alias": "fromkeys()",
            "title": "fromkeys()",
            "type": "function",
            "text": "Returns a dictionary with the specified keys and values",
            "link": "https://docs.python.org/3/library/functions.html#fromkeys",
            "code": []
        },
        {
            "alias": "get()",
            "title": "get()",
            "type": "function",
            "text": "Returns the value of the specified key",
            "link": "https://docs.python.org/3/library/functions.html#get",
            "code": []
        },
        {
            "alias": "items()",
            "title": "items()",
            "type": "function",
            "text": "Returns a list containing a tuple for each key value pair",
            "link": "https://docs.python.org/3/library/functions.html#items",
            "code": []
        },
        {
            "alias": "keys()",
            "title": "keys()",
            "type": "function",
            "text": "Returns a list containing the dictionary's keys",
            "link": "https://docs.python.org/3/library/functions.html#keys",
            "code": []
        },
        {
            "alias": "pop()",
            "title": "pop()",
            "type": "function",
            "text": "Removes the element with the specified key",
            "link": "https://docs.python.org/3/library/functions.html#function",
            "code": []
        },
        {
            "alias": "popitem()",
            "title": "popitem()",
            "type": "function",
            "text": "Removes the last inserted key-value pair",
            "link": "https://docs.python.org/3/library/functions.html#popitem",
            "code": []
        },
        {
            "alias": "setdefault()",
            "title": "setdefault()",
            "type": "function",
            "text": "Returns the value of the specified key. If the key does not exist: insert the key, with the specified value",
            "link": "https://docs.python.org/3/library/functions.html#setdefault",
            "code": []
        },
        {
            "alias": "update()",
            "title": "update()",
            "type": "function",
            "text": "Updates the dictionary with the specified key-value pairs",
            "link": "https://docs.python.org/3/library/functions.html#update",
            "code": []
        },
        {
            "alias": "values()",
            "title": "values()",
            "type": "function",
            "text": "Returns a list of all the values in the dictionary",
            "link": "https://docs.python.org/3/library/functions.html#values",
            "code": []
        },
        {
            "alias": "add()",
            "title": "add()",
            "type": "function",
            "text": "Adds an element to the set",
            "link": "https://docs.python.org/3/library/functions.html#add",
            "code": []
        },
        {
            "alias": "clear()",
            "title": "clear()",
            "type": "function",
            "text": "Removes all the elements from the set",
            "link": "https://docs.python.org/3/library/functions.html#clear",
            "code": []
        },
        {
            "alias": "copy()",
            "title": "copy()",
            "type": "function",
            "text": "Returns a copy of the set",
            "link": "https://docs.python.org/3/library/functions.html#copy",
            "code": []
        },
        {
            "alias": "difference()",
            "title": "difference()",
            "type": "function",
            "text": "Returns a set containing the difference between two or more sets",
            "link": "https://docs.python.org/3/library/functions.html#difference",
            "code": []
        },
        {
            "alias": "difference_update()",
            "title": "difference_update()",
            "type": "function",
            "text": "Removes the items in this set that are also included in another, specified set",
            "link": "https://docs.python.org/3/library/functions.html#difference_update",
            "code": []
        },
        {
            "alias": "discard()",
            "title": "discard()",
            "type": "function",
            "text": "Remove the specified item",
            "link": "https://docs.python.org/3/library/functions.html#discard",
            "code": []
        },
        {
            "alias": "intersection()",
            "title": "intersection()",
            "type": "function",
            "text": "Returns a set, that is the intersection of two other sets",
            "link": "https://docs.python.org/3/library/functions.html#intersection",
            "code": []
        },
        {
            "alias": "intersection_update()",
            "title": "intersection_update()",
            "type": "function",
            "text": "Removes the items in this set that are not present in other, specified set(s)",
            "link": "https://docs.python.org/3/library/functions.html#intersection_update",
            "code": []
        },
        {
            "alias": "isdisjoint()",
            "title": "isdisjoint()",
            "type": "function",
            "text": "Returns whether two sets have a intersection or not",
            "link": "https://docs.python.org/3/library/functions.html#isdisjoint",
            "code": []
        },
        {
            "alias": "issubset()",
            "title": "issubset()",
            "type": "function",
            "text": "Returns whether another set contains this set or not",
            "link": "https://docs.python.org/3/library/functions.html#issubset",
            "code": []
        },
        {
            "alias": "issuperset()",
            "title": "issuperset()",
            "type": "function",
            "text": "Returns whether this set contains another set or not",
            "link": "https://docs.python.org/3/library/functions.html#issuperset",
            "code": []
        },
        {
            "alias": "pop()",
            "title": "pop()",
            "type": "function",
            "text": "Removes an element from the set",
            "link": "https://docs.python.org/3/library/functions.html#pop",
            "code": []
        },
        {
            "alias": "remove()",
            "title": "remove()",
            "type": "function",
            "text": "Removes the specified element",
            "link": "https://docs.python.org/3/library/functions.html#remove",
            "code": []
        },
        {
            "alias": "symmetric_difference()",
            "title": "symmetric_difference()",
            "type": "function",
            "text": "Returns a set with the symmetric differences of two sets",
            "link": "https://docs.python.org/3/library/functions.html#symmetric_difference",
            "code": []
        },
        {
            "alias": "symmetric_difference_update()",
            "title": "symmetric_difference_update()",
            "type": "function",
            "text": "inserts the symmetric differences from this set and another",
            "link": "https://docs.python.org/3/library/functions.html#symmetric_difference_update",
            "code": []
        },
        {
            "alias": "union()",
            "title": "union()",
            "type": "function",
            "text": "Return a set containing the union of sets",
            "link": "https://docs.python.org/3/library/functions.html#union",
            "code": []
        },
        {
            "alias": "update()",
            "title": "update()",
            "type": "function",
            "text": "Update the set with the union of this set and others",
            "link": "https://docs.python.org/3/library/functions.html#update",
            "code": []
        },
        {
            "alias": "close()",
            "title": "close()",
            "type": "function",
            "text": "Closes the file",
            "link": "https://docs.python.org/3/library/functions.html#close",
            "code": []
        },
        {
            "alias": "detach()",
            "title": "detach()",
            "type": "function",
            "text": "Returns the separated raw stream from the buffer",
            "link": "https://docs.python.org/3/library/functions.html#detach",
            "code": []
        },
        {
            "alias": "fileno()",
            "title": "fileno()",
            "type": "function",
            "text": "Returns a number that represents the stream, from the operating system's perspective",
            "link": "https://docs.python.org/3/library/functions.html#fileno",
            "code": []
        },
        {
            "alias": "flush()",
            "title": "flush()",
            "type": "function",
            "text": "Flushes the internal buffer",
            "link": "https://docs.python.org/3/library/functions.html#flush",
            "code": []
        },
        {
            "alias": "isatty()",
            "title": "isatty()",
            "type": "function",
            "text": "Returns whether the file stream is interactive or not",
            "link": "https://docs.python.org/3/library/functions.html#isatty",
            "code": []
        },
        {
            "alias": "read()",
            "title": "read()",
            "type": "function",
            "text": "Returns the file content",
            "link": "https://docs.python.org/3/library/functions.html#read",
            "code": []
        },
        {
            "alias": "readable()",
            "title": "readable()",
            "type": "function",
            "text": "Returns whether the file stream can be read or not",
            "link": "https://docs.python.org/3/library/functions.html#readable",
            "code": []
        },
        {
            "alias": "readline()",
            "title": "readline()",
            "type": "function",
            "text": "Returns one line from the file",
            "link": "https://docs.python.org/3/library/functions.html#readline",
            "code": []
        },
        {
            "alias": "readlines()",
            "title": "readlines()",
            "type": "function",
            "text": "Returns a list of lines from the file",
            "link": "https://docs.python.org/3/library/functions.html#readlines",
            "code": []
        },
        {
            "alias": "seek()",
            "title": "seek()",
            "type": "function",
            "text": "Change the file position",
            "link": "https://docs.python.org/3/library/functions.html#seek",
            "code": []
        },
        {
            "alias": "seekable()",
            "title": "seekable()",
            "type": "function",
            "text": "Returns whether the file allows us to change the file position",
            "link": "https://docs.python.org/3/library/functions.html#seekable",
            "code": []
        },
        {
            "alias": "tell()",
            "title": "tell()",
            "type": "function",
            "text": "Returns the current file position",
            "link": "https://docs.python.org/3/library/functions.html#tell",
            "code": []
        },
        {
            "alias": "truncate()",
            "title": "truncate()",
            "type": "function",
            "text": "Resizes the file to a specified size",
            "link": "https://docs.python.org/3/library/functions.html#truncate",
            "code": []
        },
        {
            "alias": "writeable()",
            "title": "writeable()",
            "type": "function",
            "text": "Returns whether the file can be written to or not",
            "link": "https://docs.python.org/3/library/functions.html#writeable",
            "code": []
        },
        {
            "alias": "write()",
            "title": "write()",
            "type": "function",
            "text": "Writes the specified string to the file",
            "link": "https://docs.python.org/3/library/functions.html#write",
            "code": []
        },
        {
            "alias": "writelines()",
            "title": "writelines()",
            "type": "function",
            "text": "Writes a list of strings to the file",
            "link": "https://docs.python.org/3/library/functions.html#writelines",
            "code": []
        },
        {
            "alias": "and",
            "title": "and",
            "type": "keyword",
            "text": "A logical operator",
            "link": "",
            "code": []
        },
        {
            "alias": "as",
            "title": "as",
            "type": "keyword",
            "text": "To create an alias",
            "link": "",
            "code": []
        },
        {
            "alias": "assert",
            "title": "assert",
            "type": "keyword",
            "text": "For debugging",
            "link": "https://docs.python.org/3/reference/simple_stmts.html#the-assert-statement",
            "code": []
        },
        {
            "alias": "break",
            "title": "break",
            "type": "keyword",
            "text": "To break out of a loop",
            "link": "https://docs.python.org/3/reference/simple_stmts.html#the-break-statement",
            "code": []
        },
        {
            "alias": "class",
            "title": "class",
            "type": "keyword",
            "text": "To define a class",
            "link": "",
            "code": []
        },
        {
            "alias": "continue",
            "title": "continue",
            "type": "keyword",
            "text": "To continue to the next iteration of a loop",
            "link": "https://docs.python.org/3/reference/simple_stmts.html#the-continue-statement",
            "code": []
        },
        {
            "alias": "def",
            "title": "def",
            "type": "keyword",
            "text": "To define a function",
            "link": "",
            "code": []
        },
        {
            "alias": "del",
            "title": "del",
            "type": "keyword",
            "text": "To delete an object",
            "link": "https://docs.python.org/3/reference/simple_stmts.html#the-del-statement",
            "code": []
        },
        {
            "alias": "elif",
            "title": "elif",
            "type": "keyword",
            "text": "Used in conditional statements, same as else if",
            "link": "",
            "code": []
        },
        {
            "alias": "else",
            "title": "else",
            "type": "keyword",
            "text": "Used in conditional statements",
            "link": "",
            "code": []
        },
        {
            "alias": "except",
            "title": "except",
            "type": "keyword",
            "text": "Used with exceptions, what to do when an exception occurs",
            "link": "",
            "code": []
        },
        {
            "alias": "False",
            "title": "False",
            "type": "keyword",
            "text": "The false value of the bool type. Assignments to False are illegal and raise a SyntaxError.",
            "link": "https://docs.python.org/3/library/constants.html#False",
            "code": []
        },
        {
            "alias": "finally",
            "title": "finally",
            "type": "keyword",
            "text": "Used with exceptions, a block of code that will be executed no matter if there is an exception or not",
            "link": "",
            "code": []
        },
        {
            "alias": "for",
            "title": "for",
            "type": "keyword",
            "text": "To create a for loop",
            "link": "https://docs.python.org/3/reference/compound_stmts.html#the-for-statement",
            "code": []
        },
        {
            "alias": "from",
            "title": "from",
            "type": "keyword",
            "text": "To import specific parts of a module",
            "link": "",
            "code": []
        },
        {
            "alias": "global",
            "title": "global",
            "type": "keyword",
            "text": "To declare a global variable",
            "link": "https://docs.python.org/3/reference/simple_stmts.html#the-global-statement",
            "code": []
        },
        {
            "alias": "if",
            "title": "if",
            "type": "keyword",
            "text": "*if* allows to make a conditional statement and only run a block of code when the condition is true.",
            "link": "https://docs.python.org/3/reference/compound_stmts.html#the-if-statement",
            "code": ["```py\nif a < b:\n   print('a is less than b')\n```"]
        },
        {
            "alias": "import",
            "title": "import",
            "type": "keyword",
            "text": "To import a module",
            "link": "https://docs.python.org/3/reference/simple_stmts.html#the-import-statement",
            "code": []
        },
        {
            "alias": "in",
            "title": "in",
            "type": "keyword",
            "text": "To check if a value is present in a list, tuple, etc.",
            "link": "",
            "code": []
        },
        {
            "alias": "is",
            "title": "is",
            "type": "keyword",
            "text": "To test if two variables are equal",
            "link": "",
            "code": []
        },
        {
            "alias": "lambda",
            "title": "lambda",
            "type": "keyword",
            "text": "To create an anonymous function",
            "link": "",
            "code": []
        },
        {
            "alias": "None",
            "title": "None",
            "type": "keyword",
            "text": "Represents a null value",
            "link": "https://docs.python.org/3/library/constants.html#None",
            "code": []
        },
        {
            "alias": "nonlocal",
            "title": "nonlocal",
            "type": "keyword",
            "text": "To declare a non-local variable",
            "link": "https://docs.python.org/3/reference/simple_stmts.html#the-nonlocal-statement",
            "code": []
        },
        {
            "alias": "not",
            "title": "not",
            "type": "keyword",
            "text": "A logical operator",
            "link": "",
            "code": []
        },
        {
            "alias": "or",
            "title": "or",
            "type": "keyword",
            "text": "A logical operator",
            "link": "",
            "code": []
        },
        {
            "alias": "pass",
            "title": "pass",
            "type": "keyword",
            "text": "A null statement, a statement that will do nothing",
            "link": "https://docs.python.org/3/reference/simple_stmts.html#the-pass-statement",
            "code": []
        },
        {
            "alias": "raise",
            "title": "raise",
            "type": "keyword",
            "text": "To raise an exception",
            "link": "https://docs.python.org/3/reference/simple_stmts.html#the-raise-statement",
            "code": []
        },
        {
            "alias": "return",
            "title": "return",
            "type": "keyword",
            "text": "To exit a function and return a value",
            "link": "https://docs.python.org/3/reference/simple_stmts.html#the-return-statement",
            "code": []
        },
        {
            "alias": "True",
            "title": "True",
            "type": "keyword",
            "text": "Boolean value, result of comparison operations",
            "link": "https://docs.python.org/3/library/constants.html#True",
            "code": []
        },
        {
            "alias": "try",
            "title": "try",
            "type": "keyword",
            "text": "To make a try...except statement",
            "link": "https://docs.python.org/3/reference/compound_stmts.html#the-try-statement",
            "code": []
        },
        {
            "alias": "while",
            "title": "while",
            "type": "keyword",
            "text": "To create a while loop",
            "link": "https://docs.python.org/3/reference/compound_stmts.html#the-while-statement",
            "code": []
        },
        {
            "alias": "with",
            "title": "with",
            "type": "keyword",
            "text": "Used to simplify exception handling",
            "link": "https://docs.python.org/3/reference/compound_stmts.html#the-with-statement",
            "code": []
        },
        {
            "alias": "yield",
            "title": "yield",
            "type": "keyword",
            "text": "To end a function, returns a generator",
            "link": "https://docs.python.org/3/reference/simple_stmts.html#the-yield-statement",
            "code": []
        }
    ]
}
